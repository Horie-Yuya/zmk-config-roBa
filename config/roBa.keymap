#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp L         &kp U         &kp COMMA             &kp PERIOD                                                                        &kp F        &kp W  &kp R  &kp Y  &kp P
&mt LCTRL E   &kp I         &kp A         &kp O                 &kp SLASH             &kp ESCAPE                      &kp MINUS                   &kp K        &kp T  &kp N  &kp S  &kp H
&mt LSHIFT Z  &kp X         &kp C         &kp V                 &kp SEMICOLON         &kp TAB                         &kp EQUAL                   &kp G        &kp D  &kp M  &kp Z  &kp B
&kp LCTRL     &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 3 F10  &mt LEFT_SHIFT SPACE  &lt_to_layer_0 6 LC(SPACE)      &mt LEFT_CONTROL BACKSPACE  &lt 2 ENTER                       &kp J
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        NUMandFUNC {
            bindings = <
&none         &none         &kp ASTERISK  &kp SLASH     &none                         &kp EQUAL     &kp PLUS  &kp MINUS  &none   &kp SQT
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &trans       &kp DEL  &kp NUMBER_6  &kp N7    &kp N8     &kp N9  &kp N0
&kp F5        &kp F4        &kp F3        &kp F2        &kp F1  &kp F12      &kp F11  &kp F6        &kp F7    &kp F8     &kp F9  &kp F10
&trans        &trans        &trans        &trans        &trans  &trans       &trans   &trans                                     &none
            >;
        };

        Symbols {
            bindings = <
&kp NON_US_BACKSLASH  &kp TILDE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLASH                               &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&kp EXCLAMATION       &kp AT_SIGN  &kp HASH              &kp DOLLAR             &kp PERCENT        &trans      &kp DEL  &kp CARET             &kp AMPERSAND          &kp ASTERISK      &kp PIPE           &kp COLON
&trans                &trans       &trans                &kp SQT                &kp DOUBLE_QUOTES  &trans      &trans   &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans            &trans             &kp SEMICOLON
&trans                &trans       &trans                &trans                 &trans             &trans      &trans   &trans                                                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&kp ESCAPE      &trans                  &kp UP_ARROW  &trans                   &trans                          &kp LC(T)        &trans    &mkp MB3  &trans  &trans
&kp HOME        &kp LEFT                &kp DOWN      &kp RIGHT_ARROW          &kp END  &trans      &kp LC(V)  &kp LC(LS(TAB))  &mkp MB1  &mkp MB2  &trans  &kp LC(TAB)
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans        &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &kp LC(C)  &kp LC(W)        &mkp MB4  &mkp MB5  &trans  &trans
&trans          &trans                  &trans        &trans                   &trans   &trans      &trans     &trans                                       &trans
            >;
        };

        BT_select {
            bindings = <
&trans  &trans        &trans        &trans        &trans                      &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans  &kp LEFT      &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &trans  &trans        &trans          &trans        &trans           &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans  &trans                                                       &bt BT_CLR_ALL
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
